// Code generated by ent, DO NOT EDIT.

package organizationalunit

import (
	"time"
)

const (
	// Label holds the string label denoting the organizationalunit type in the database.
	Label = "organizational_unit"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDisplayName holds the string denoting the display_name field in the database.
	FieldDisplayName = "display_name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// FieldMetadata holds the string denoting the metadata field in the database.
	FieldMetadata = "metadata"
	// FieldTypeID holds the string denoting the type_id field in the database.
	FieldTypeID = "type_id"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// EdgeOrganizationalUnitTypeID holds the string denoting the organizational_unit_type_id edge name in mutations.
	EdgeOrganizationalUnitTypeID = "organizational_unit_type_id"
	// EdgeSpecialties holds the string denoting the specialties edge name in mutations.
	EdgeSpecialties = "specialties"
	// Table holds the table name of the organizationalunit in the database.
	Table = "organizational_units"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "organizational_units"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "parent_id"
	// ChildrenTable is the table that holds the children relation/edge.
	ChildrenTable = "organizational_units"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "parent_id"
	// OrganizationalUnitTypeIDTable is the table that holds the organizational_unit_type_id relation/edge.
	OrganizationalUnitTypeIDTable = "organizational_units"
	// OrganizationalUnitTypeIDInverseTable is the table name for the OrganizationalUnitType entity.
	// It exists in this package in order to avoid circular dependency with the "organizationalunittype" package.
	OrganizationalUnitTypeIDInverseTable = "organizational_unit_types"
	// OrganizationalUnitTypeIDColumn is the table column denoting the organizational_unit_type_id relation/edge.
	OrganizationalUnitTypeIDColumn = "type_id"
	// SpecialtiesTable is the table that holds the specialties relation/edge. The primary key declared below.
	SpecialtiesTable = "organizational_unit_specialties"
	// SpecialtiesInverseTable is the table name for the Specialty entity.
	// It exists in this package in order to avoid circular dependency with the "specialty" package.
	SpecialtiesInverseTable = "specialties"
)

// Columns holds all SQL columns for organizationalunit fields.
var Columns = []string{
	FieldID,
	FieldDisplayName,
	FieldCreatedAt,
	FieldDeletedAt,
	FieldParentID,
	FieldMetadata,
	FieldTypeID,
}

var (
	// SpecialtiesPrimaryKey and SpecialtiesColumn2 are the table columns denoting the
	// primary key for the specialties relation (M2M).
	SpecialtiesPrimaryKey = []string{"organizational_unit_id", "specialty_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDisplayName holds the default value on creation for the "display_name" field.
	DefaultDisplayName string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultMetadata holds the default value on creation for the "metadata" field.
	DefaultMetadata []string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID string
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
